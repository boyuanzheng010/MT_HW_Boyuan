#!/usr/bin/env python
import optparse
import sys
from collections import defaultdict
from simalign import simalign
from tqdm import tqdm

import os
package_name = 'sklearn'
os.system(f'pip install {package_name}')


optparser = optparse.OptionParser()
optparser.add_option("-d", "--data", dest="train", default="split_data/fold_1/hansards", help="Data filename prefix (default=data)")
optparser.add_option("-e", "--english", dest="english", default="e", help="Suffix of English filename (default=e)")
optparser.add_option("-f", "--french", dest="french", default="f", help="Suffix of French filename (default=f)")
optparser.add_option("-t", "--threshold", dest="threshold", default=0.5, type="float", help="Threshold for aligning with Dice's coefficient (default=0.5)")
optparser.add_option("-n", "--num_sentences", dest="num_sents", default=100000000000, type="int", help="Number of sentences to use for training and alignment")
(opts, _) = optparser.parse_args()
f_data = "%s.%s" % (opts.train, opts.french)
e_data = "%s.%s" % (opts.train, opts.english)

sys.stderr.write("Loading Sim Aligner...")

model = simalign.SentenceAligner(model="bert")

with open('bert_mwmf.a', 'w', encoding='utf-8') as mwmf:
  with open('bert_inter.a', 'w', encoding='utf-8') as inter:
    with open('bert_itermax.a', 'w', encoding='utf-8') as itermax:
      for (f, e) in tqdm(zip(open(f_data, encoding='utf-8'), open(e_data, encoding='utf-8'))):
        result = model.get_word_aligns(f, e)
        # Write mwmf
        for (i, j) in result['mwmf']:
          mwmf.write("%i-%i " % (i, j))
        mwmf.write("\n")

        # Write inter
        for (i, j) in result['inter']:
          inter.write("%i-%i " % (i, j))
        inter.write("\n")

        # Write itermax
        for (i, j) in result['itermax']:
          itermax.write("%i-%i " % (i, j))
        itermax.write("\n")












